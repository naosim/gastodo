{"version":3,"sources":["src/vo.ts","src/option.ts","src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,EAAA;AAAA;AAAA,YAAA;AAEE,WAAA,EAAA,CAAY,KAAZ,EAAoB;AAChB,SAAK,KAAL,GAAa,KAAb;AACH;;AACH,SAAA,EAAA;AALA,CAAA,EAAA;;AAMA,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAA9B,WAAA,QAAA,GAAA;;AACC;;AAAD,SAAA,QAAA;AADA,CAAA,CAA8B,EAA9B,CAAA;;AAAa,OAAA,CAAA,QAAA,GAAA,QAAA;;AAGb,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAA9B,WAAA,QAAA,GAAA;;AACC;;AAAD,SAAA,QAAA;AADA,CAAA,CAA8B,EAA9B,CAAA;;AAAa,OAAA,CAAA,QAAA,GAAA,QAAA;;AAGb,IAAA,MAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4B,EAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;;AAA5B,WAAA,MAAA,GAAA;;AAiBC;;AAhBC,EAAA,MAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,WAAU,KAAK,KAAL,CAAW,WAAX,KAAwB,GAAxB,GAA4B,KAAK,sBAAL,EAAtC;AACD,GAFD;;AAGA,EAAA,MAAA,CAAA,SAAA,CAAA,sBAAA,GAAA,YAAA;AACE,WAAU,MAAM,CAAC,QAAP,CAAgB,KAAK,KAAL,CAAW,QAAX,KAAwB,CAAxC,IAA0C,GAA1C,GAA8C,MAAM,CAAC,QAAP,CAAgB,KAAK,KAAL,CAAW,OAAX,EAAhB,CAAxD;AACD,GAFD;;AAGA,EAAA,MAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,WAAU,MAAM,CAAC,QAAP,CAAgB,KAAK,KAAL,CAAW,QAAX,EAAhB,IAAsC,GAAtC,GAA0C,MAAM,CAAC,QAAP,CAAgB,KAAK,KAAL,CAAW,UAAX,EAAhB,CAApD;AACD,GAFD;;AAIO,EAAA,MAAA,CAAA,QAAA,GAAP,UAAgB,CAAhB,EAAsB;AACpB,WAAO,CAAC,MAAM,CAAP,EAAU,KAAV,CAAgB,CAAC,CAAjB,CAAP;AACD,GAFM;;AAGO,EAAA,MAAA,CAAA,QAAA,GAAd,UAAuB,GAAvB,EAAkC;AAChC,WAAO,UAAU,GAAV,CAAP;AACD,GAFa;;AAGhB,SAAA,MAAA;AAjBA,CAAA,CAA4B,EAA5B,CAAA;;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA;;;;;;ACJb,SAAgB,QAAhB,CAA4B,CAA5B,EAAgC;AAC9B,MAAG,CAAC,KAAK,IAAN,IAAc,CAAC,KAAK,SAAvB,EAAkC;AAChC,WAAO,IAAI,IAAJ,EAAP;AACD;;AACD,SAAO,IAAI,IAAJ,CAAY,CAAZ,CAAP;AACD;;AALD,OAAA,CAAA,QAAA,GAAA,QAAA;;AAOA,SAAgB,IAAhB,CAAwB,CAAxB,EAA2B;AACzB,SAAO,IAAI,IAAJ,CAAS,CAAT,CAAP;AACD;;AAFD,OAAA,CAAA,IAAA,GAAA,IAAA;;AAGA,SAAgB,KAAhB,GAAqB;AACnB,SAAO,IAAI,IAAJ,EAAP;AACD;;AAFD,OAAA,CAAA,KAAA,GAAA,KAAA;;AAIA,IAAA,IAAA;AAAA;AAAA,YAAA;AAEE,WAAA,IAAA,CAAY,KAAZ,EAAoB;AAClB,SAAK,KAAL,GAAa,KAAb;AACD;;AACD,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAO,EAAP,EAAqB;AACnB,WAAO,QAAQ,CAAC,EAAE,CAAC,KAAK,KAAN,CAAH,CAAf;AACD,GAFD;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,KAAP;AACD,GAFD;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACE,WAAO,IAAP;AACD,GAFD;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,YAAA;AACE,WAAO,KAAK,KAAZ;AACD,GAFD;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,EAAN,EAAc;AACZ,WAAO,KAAK,KAAZ;AACD,GAFD;;AAGF,SAAA,IAAA;AApBA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA;;AAsBb,IAAA,IAAA;AAAA;AAAA,YAAA;AAAA,WAAA,IAAA,GAAA,CAgBC;;AAfC,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAO,EAAP,EAAqB;AACnB,WAAO,KAAK,EAAZ;AACD,GAFD;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,IAAP;AACD,GAFD;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACE,WAAO,KAAP;AACD,GAFD;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,YAAA;AACE,UAAM,IAAI,KAAJ,CAAU,eAAV,CAAN;AACD,GAFD;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,EAAN,EAAc;AACZ,WAAO,EAAE,EAAT;AACD,GAFD;;AAGF,SAAA,IAAA;AAhBA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5Cb,IAAA,EAAA,GAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AAEA,SAAS,QAAT,CAAkB,CAAlB,EAAwB;AACtB,SAAO,CAAC,MAAM,CAAP,EAAU,KAAV,CAAgB,CAAC,CAAjB,CAAP;AACD;;AACD,IAAA,IAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmB,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AAAnB,WAAA,IAAA,GAAA;;AAAiC;;AAAD,SAAA,IAAA;AAAhC,CAAA,CAAmB,EAAE,CAAC,QAAtB,CAAA;;AAEA,IAAI,CAAC,GAAG,IAAI,IAAJ,CAAS,IAAT,CAAR;AACA,OAAO,CAAC,GAAR,CAAY,CAAZ;AAEA,IAAK,UAAL;;AAAA,CAAA,UAAK,UAAL,EAAe;AACb,EAAA,UAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACA,EAAA,UAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,UAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CALD,EAAK,UAAU,KAAV,UAAU,GAAA,EAAA,CAAf;;AAOA,IAAA,sBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,sBAAA,EAAA,MAAA,CAAA;;AAArC,WAAA,sBAAA,GAAA;;AAYC;;AAXC,EAAA,sBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,KAAK,KAAL,CAAW,QAAX,KAAwB,CAAxB,IAA6B,KAAK,KAAL,CAAW,UAAX,KAA0B,CAA9D;AACD,GAFD;;AAGA,EAAA,sBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,QAAM,CAAC,GAAM,KAAK,KAAL,CAAW,WAAX,KAAwB,GAAxB,GAA4B,QAAQ,CAAC,KAAK,KAAL,CAAW,QAAX,KAAwB,CAAzB,CAApC,GAA+D,GAA/D,GAAmE,QAAQ,CAAC,KAAK,KAAL,CAAW,OAAX,EAAD,CAAxF;;AACA,QAAG,CAAC,KAAK,OAAL,EAAJ,EAAoB;AAClB,aAAO,CAAP;AACD;;AACD,WAAO,CAAC,IAAG,MAAI,QAAQ,CAAC,KAAK,KAAL,CAAW,QAAX,EAAD,CAAZ,GAAmC,GAAnC,GAAuC,QAAQ,CAAC,KAAK,KAAL,CAAW,UAAX,EAAD,CAAlD,CAAR;AAED,GAPD;;AAQF,SAAA,sBAAA;AAZA,CAAA,CAAqC,EAAE,CAAC,MAAxC,CAAA;;AAcA,IAAA,QAAA;AAAA;AAAA,YAAA;AAGE,WAAA,QAAA,CAAY,aAAZ,EAAmD,UAAnD,EAAyE;AACvE,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACD;;AACM,EAAA,QAAA,CAAA,kBAAA,GAAP,UAA0B,aAA1B,EAA+D;AAC7D,QAAM,CAAC,GAAG,aAAa,CAAC,KAAd,CAAoB,QAApB,EAAV;AACA,QAAI,UAAJ;;AACA,QAAG,CAAC,GAAG,EAAP,EAAW;AACT,MAAA,UAAU,GAAG,UAAU,CAAC,EAAxB;AACD,KAFD,MAEO,IAAG,CAAC,GAAG,EAAP,EAAW;AAChB,MAAA,UAAU,GAAG,UAAU,CAAC,GAAxB;AACD,KAFM,MAEA,IAAG,CAAC,GAAG,EAAP,EAAW;AAChB,MAAA,UAAU,GAAG,UAAU,CAAC,GAAxB;AACD,KAFM,MAEA;AACL,MAAA,UAAU,GAAG,UAAU,CAAC,IAAxB;AACD;;AACD,WAAO,IAAI,QAAJ,CAAa,aAAb,EAA4B,UAA5B,CAAP;AACD,GAbM;;AAcA,EAAA,QAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACE,QAAI,CAAC,GAAG,CAAR;;AACA,QAAG,KAAK,UAAL,IAAmB,UAAU,CAAC,GAAjC,EAAsC;AACpC,MAAA,CAAC,GAAG,CAAJ;AACD,KAFD,MAEO,IAAG,KAAK,UAAL,IAAmB,UAAU,CAAC,GAAjC,EAAsC;AAC3C,MAAA,CAAC,GAAG,CAAJ;AACD;;AAAC,QAAG,KAAK,UAAL,IAAmB,UAAU,CAAC,IAAjC,EAAuC;AACvC,MAAA,CAAC,GAAG,CAAJ;AACD;;AACD,WAAO,QAAQ,CAAC,KAAG,KAAK,aAAL,CAAmB,WAAnB,GAAiC,KAAjC,CAAuC,GAAvC,EAA4C,IAA5C,CAAiD,EAAjD,CAAH,GAA0D,CAA3D,CAAf;AACD,GAVM;;AAWT,SAAA,QAAA;AAhCA,CAAA,EAAA;;AAkCA,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2B,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAA3B,WAAA,YAAA,GAAA;;AAAyC;;AAAD,SAAA,YAAA;AAAxC,CAAA,CAA2B,EAAE,CAAC,QAA9B,CAAA;;AACA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyB,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AAAzB,WAAA,UAAA,GAAA;;AAAuC;;AAAD,SAAA,UAAA;AAAtC,CAAA,CAAyB,EAAE,CAAC,QAA5B,CAAA;;AACA,IAAA,mBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;;AAAlC,WAAA,mBAAA,GAAA;;AAA8C;;AAAD,SAAA,mBAAA;AAA7C,CAAA,CAAkC,EAAE,CAAC,MAArC,CAAA;;AACA,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AAAhC,WAAA,iBAAA,GAAA;;AAIC;;AAHC,EAAA,iBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,aAAf,EAAiD;AAC/C,WAAO,IAAI,UAAJ,CAAe,CAAC,KAAK,KAAL,CAAW,OAAX,KAAuB,aAAa,CAAC,KAAd,CAAoB,OAApB,EAAxB,KAA0D,KAAK,EAAL,GAAU,IAApE,CAAf,CAAP;AACD,GAFD;;AAGF,SAAA,iBAAA;AAJA,CAAA,CAAgC,EAAE,CAAC,MAAnC,CAAA;;AAKA,IAAA,UAAA;AAAA;AAAA,YAAA;AAIE,WAAA,UAAA,CAAY,aAAZ,EAAgD,iBAAhD,EAAmG;AACjG,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,iBAAL,GAAyB,iBAAzB;AACA,SAAK,gBAAL,GAAwB,iBAAiB,CAAC,GAAlB,CAAsB,UAAA,GAAA,EAAG;AAAI,aAAA,GAAG,CAAC,cAAJ,CAAmB,aAAnB,CAAA;AAAiC,KAA9D,CAAxB;AACD;;AAED,EAAA,UAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UAAkB,iBAAlB,EAAsD;AACpD,WAAO,IAAI,UAAJ,CAAe,KAAK,aAApB,EAAmC,MAAM,CAAC,IAAP,CAAY,iBAAZ,CAAnC,CAAP;AACD,GAFD;;AAGF,SAAA,UAAA;AAbA,CAAA,EAAA;;AAeA,IAAA,MAAA;AAAA;AAAA,YAAA;AAGE,WAAA,MAAA,CAAY,gBAAZ,EAAuD;AACrD,SAAK,gBAAL,GAAwB,gBAAxB;;AACA,QAAG,gBAAgB,CAAC,OAAjB,EAAH,EAA+B;AAC7B,WAAK,gBAAL,GAAwB,MAAM,CAAC,KAAP,EAAxB;AACD,KAFD,MAEO;AACL,WAAK,gBAAL,GAAwB,gBAAgB,CAAC,GAAjB,GAAuB,gBAA/C;AACD;AACF;;AAED,EAAA,MAAA,CAAA,SAAA,CAAA,4BAAA,GAAA,YAAA;AACE,WAAO,KAAK,gBAAL,CAAsB,GAAtB,CAA0B,UAAA,CAAA,EAAC;AAAI,aAAA,CAAC,CAAC,aAAF;AAAe,KAA9C,CAAP;AACD,GAFD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,0BAAA,GAAA,YAAA;AACE,QAAG,KAAK,gBAAL,CAAsB,OAAtB,EAAH,EAAoC;AAClC,aAAO,MAAM,CAAC,KAAP,EAAP;AACD;;AACD,WAAO,KAAK,gBAAL,CAAsB,GAAtB,GAA4B,iBAAnC;AACD,GALD;;AAOF,SAAA,MAAA;AAvBA,CAAA,EAAA;;AAyBA,IAAA,MAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqB,EAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;;AAArB,WAAA,MAAA,GAAA;;AAEC;;AADS,EAAA,MAAA,CAAA,SAAA,CAAA,OAAA,GAAR,YAAA,CAAmB,CAAX;;AACV,SAAA,MAAA;AAFA,CAAA,CAAqB,EAAE,CAAC,QAAxB,CAAA;;AAGA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwB,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAAxB,WAAA,SAAA,GAAA;;AAEC;;AADS,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,GAAR,YAAA,CAAsB,CAAd;;AACV,SAAA,SAAA;AAFA,CAAA,CAAwB,EAAE,CAAC,QAA3B,CAAA;;AAIA,IAAA,IAAA;AAAA;AAAA,YAAA;AAOE,WAAA,IAAA,CACE,MADF,EAEE,SAFF,EAGE,QAHF,EAIE,YAJF,EAKE,MALF,EAME,UANF,EAMqB;AAEnB,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,UAAL,GAAkB,UAAlB;AACD;;AACH,SAAA,IAAA;AAtBA,CAAA,EAAA;;AAmCA,IAAA,QAAA;AAAA;AAAA,YAAA;AAAA,WAAA,QAAA,GAAA,CAwCC;;AA/BQ,EAAA,QAAA,CAAA,MAAA,GAAP,UAAc,IAAd,EAAyB;AACvB,QAAI,GAAG,GAAQ,IAAI,CAAC,SAAL,CAAe,IAAf,CAAf;AACA,QAAI,QAAQ,GAAG,IAAI,QAAJ,EAAf;AACA,IAAA,QAAQ,CAAC,EAAT,GAAc,GAAG,CAAC,EAAlB;AACA,IAAA,QAAQ,CAAC,EAAT,GAAc,GAAG,CAAC,EAAlB;AACA,IAAA,QAAQ,CAAC,GAAT,GAAe,GAAG,CAAC,GAAnB;AACA,IAAA,QAAQ,CAAC,GAAT,GAAe,GAAG,CAAC,GAAJ,IAAW,EAA1B;AACA,IAAA,QAAQ,CAAC,GAAT,GAAe,GAAG,CAAC,GAAnB;AACA,IAAA,QAAQ,CAAC,EAAT,GAAc,GAAG,CAAC,EAAJ,IAAU,EAAxB;AACA,IAAA,QAAQ,CAAC,GAAT,GAAe,GAAG,CAAC,GAAJ,IAAW,EAA1B;AACA,IAAA,QAAQ,CAAC,OAAT,GAAmB,GAAG,CAAC,OAAJ,IAAe,EAAlC;AACA,WAAO,QAAP;AACD,GAZM;;AA+BT,SAAA,QAAA;AAxCA,CAAA,EAAA;;AA0CA,IAAA,aAAA;AAAA;AAAA,YAAA;AAAA,WAAA,aAAA,GAAA,CAmEC;;AAlEC,EAAA,aAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,CAAX,EAAuB;AACrB,QAAI,QAAJ;AACA,QAAM,KAAK,GAAG,IAAI,sBAAJ,CAA2B,IAAI,IAAJ,CAAS,CAAC,CAAC,sBAAX,CAA3B,CAAd;;AACA,QAAG,KAAK,CAAC,KAAN,CAAY,QAAZ,MAA0B,CAA7B,EAAgC;AAC9B,MAAA,QAAQ,GAAG,IAAI,QAAJ,CAAa,KAAb,EAAoB,UAAU,CAAC,CAAC,CAAC,UAAH,CAA9B,CAAX;AACD,KAFD,MAEO;AACL,MAAA,QAAQ,GAAG,QAAQ,CAAC,kBAAT,CAA4B,KAA5B,CAAX;AACD;;AAED,QAAI,gBAAJ;;AACA,QAAG,CAAC,CAAC,aAAF,CAAgB,MAAhB,IAA0B,CAA7B,EAAgC;AAC9B,MAAA,gBAAgB,GAAG,MAAM,CAAC,KAAP,EAAnB;AACD,KAFD,MAEO;AACL,UAAI,SAAJ;;AACA,UAAG,CAAC,CAAC,WAAF,CAAc,MAAd,IAAwB,CAA3B,EAA8B;AAC5B,QAAA,SAAS,GAAG,MAAM,CAAC,KAAP,EAAZ;AACD,OAFD,MAEO;AACL,QAAA,SAAS,GAAG,MAAM,CAAC,IAAP,CAAY,IAAI,iBAAJ,CAAsB,IAAI,IAAJ,CAAS,CAAC,CAAC,WAAX,CAAtB,CAAZ,CAAZ;AACD;;AACD,UAAM,IAAI,GAAG,IAAI,UAAJ,CACX,IAAI,mBAAJ,CAAwB,IAAI,IAAJ,CAAS,CAAC,CAAC,aAAX,CAAxB,CADW,EAEX,SAFW,CAAb;AAIA,MAAA,gBAAgB,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAnB;AACD;;AAED,WAAO,IAAI,IAAJ,CACL,IAAI,MAAJ,CAAW,CAAC,CAAC,MAAb,CADK,EAEL,IAAI,SAAJ,CAAc,CAAC,CAAC,SAAhB,CAFK,EAGL,QAHK,EAIL,IAAI,YAAJ,CAAiB,CAAC,CAAC,YAAnB,CAJK,EAKL,IAAI,MAAJ,CAAW,gBAAX,CALK,EAML,CAAC,CAAC,UAAF,CAAa,MAAb,GAAsB,CANjB,CAAP;AAQD,GAlCD;;AAoCA,EAAA,aAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,CAAX,EAAkB;AAChB,QAAI,IAAI,GAAG,EAAX;AACA,IAAA,IAAI,CAAC,MAAL,GAAc,CAAC,CAAC,MAAF,CAAS,KAAvB;AACA,IAAA,IAAI,CAAC,SAAL,GAAiB,CAAC,CAAC,SAAF,CAAY,KAA7B;AACA,IAAA,IAAI,CAAC,sBAAL,GAA8B,CAAC,CAAC,QAAF,CAAW,aAAX,CAAyB,KAAzB,CAA+B,WAA/B,EAA9B;AACA,IAAA,IAAI,CAAC,UAAL,GAAkB,CAAC,CAAC,QAAF,CAAW,UAA7B;AACA,IAAA,IAAI,CAAC,YAAL,GAAoB,CAAC,CAAC,YAAF,CAAe,KAAnC;AACA,IAAA,IAAI,CAAC,aAAL,GAAqB,CAAC,CAAC,MAAF,CAAS,4BAAT,GAAwC,GAAxC,CAA4C,UAAA,CAAA,EAAC;AAAI,aAAA,CAAC,CAAC,KAAF,CAAQ,WAAR,EAAA;AAAqB,KAAtE,EAAwE,KAAxE,CAA8E,YAAA;AAAM,aAAA,EAAA;AAAE,KAAtF,CAArB;AACA,IAAA,IAAI,CAAC,WAAL,GAAmB,CAAC,CAAC,MAAF,CAAS,0BAAT,GAAsC,GAAtC,CAA0C,UAAA,CAAA,EAAC;AAAI,aAAA,CAAC,CAAC,KAAF,CAAQ,WAAR,EAAA;AAAqB,KAApE,EAAsE,KAAtE,CAA4E,YAAA;AAAM,aAAA,EAAA;AAAE,KAApF,CAAnB;AACA,IAAA,IAAI,CAAC,UAAL,GAAkB,CAAC,CAAC,UAAF,GAAe,GAAf,GAAqB,EAAvC;AACA,WAAO,IAAP;AACD,GAXD;;AAaA,EAAA,aAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,IAAX,EAAsB;AACpB,QAAI,QAAQ,GAAG,QAAQ,CAAC,MAAT,CAAgB,IAAhB,CAAf;AACA,QAAI,IAAI,GAAG,IAAI,SAAJ,EAAX;AACA,IAAA,IAAI,CAAC,MAAL,GAAc,QAAQ,CAAC,EAAvB;AACA,IAAA,IAAI,CAAC,SAAL,GAAiB,QAAQ,CAAC,EAA1B;AACA,IAAA,IAAI,CAAC,sBAAL,GAA8B,QAAQ,CAAC,GAAvC;AACA,IAAA,IAAI,CAAC,UAAL,GAAkB,QAAQ,CAAC,GAA3B;AACA,IAAA,IAAI,CAAC,YAAL,GAAoB,QAAQ,CAAC,QAAQ,CAAC,GAAV,CAA5B;AACA,IAAA,IAAI,CAAC,aAAL,GAAqB,QAAQ,CAAC,EAA9B;AACA,IAAA,IAAI,CAAC,WAAL,GAAmB,QAAQ,CAAC,GAA5B;AACA,IAAA,IAAI,CAAC,UAAL,GAAkB,QAAQ,CAAC,OAA3B;AACA,WAAO,IAAP;AACD,GAZD;;AAcA,EAAA,aAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,IAAX,EAAyB,CAExB,CAFD;;AAGF,SAAA,aAAA;AAnEA,CAAA,EAAA;AAqEA;;;;;AAGA,IAAA,WAAA;AAAA;AAAA,YAAA;AAOE,WAAA,WAAA,CACE,MADF,EACkB,SADlB,EACwC,sBADxC,EACwF,UADxF,EAC+G,YAD/G,EACyI;AAEvI,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,sBAAL,GAA8B,sBAA9B;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,YAAL,GAAoB,YAApB;AACD;;AAED,EAAA,WAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,WAAO,CAAC,KAAK,MAAL,CAAY,KAAb,EAAoB,KAAK,sBAAL,CAA4B,UAA5B,EAApB,EAA8D,KAAK,UAAnE,EAA+E,KAAK,SAAL,CAAe,KAA9F,EAAqG,KAAK,KAAK,YAAL,CAAkB,KAA5H,CAAP;AAED,GAHD;;AAKF,SAAA,WAAA;AAtBA,CAAA,EAAA;;AAwBA,SAAS,QAAT,GAAiB;AACf,MAAM,CAAC,GAAG,IAAI,IAAJ,EAAV;AACA,EAAA,CAAC,CAAC,QAAF,CAAW,CAAX;AACA,EAAA,CAAC,CAAC,UAAF,CAAa,CAAb;AACA,EAAA,CAAC,CAAC,UAAF,CAAa,CAAb;AACA,EAAA,CAAC,CAAC,eAAF,CAAkB,CAAlB;AACA,SAAO,CAAP;AACD;;AAED,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsB,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAAtB,WAAA,OAAA,GAAA;;AAsBC;;AArBC,EAAA,OAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,QAAG,QAAQ,CAAC,KAAK,KAAN,CAAR,IAAwB,GAA3B,EAAgC;AAC9B,UAAG,KAAK,KAAL,IAAc,UAAU,CAAC,EAAzB,IACE,KAAK,KAAL,IAAc,UAAU,CAAC,GAD3B,IAEE,KAAK,KAAL,IAAc,UAAU,CAAC,GAF3B,IAGE,KAAK,KAAL,IAAc,UAAU,CAAC,IAH9B,EAGoC;AAChC,eAAO,WAAW,CAAC,UAAnB;AACD,OALH,MAKS;AACL,eAAO,WAAW,CAAC,IAAnB;AACD;AAEJ,KAVD,MAUO;AACL,UAAG,KAAK,KAAL,CAAW,OAAX,CAAmB,GAAnB,KAA2B,CAAC,CAA5B,IAAiC,KAAK,KAAL,CAAW,MAAX,IAAqB,CAAzD,EAA4D;AAC1D,eAAO,WAAW,CAAC,QAAnB;AACD,OAFD,MAEO;AACL,eAAO,WAAW,CAAC,QAAnB;AACD;AAEF;AACF,GAnBD;;AAqBF,SAAA,OAAA;AAtBA,CAAA,CAAsB,EAAE,CAAC,QAAzB,CAAA;;AAuBA,IAAK,WAAL;;AAAA,CAAA,UAAK,WAAL,EAAgB;AACZ,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AAAU,EAAA,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AAAY,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AAAU,EAAA,WAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACnC,CAFD,EAAK,WAAW,KAAX,WAAW,GAAA,EAAA,CAAhB,GAIA;;;AACA,SAAS,iBAAT,CAA2B,IAA3B,EAAuC;AACrC,MAAM,KAAK,GAAG,QAAQ,EAAtB;AACA,EAAA,IAAI,GAAG,IAAI,CAAC,IAAL,EAAP;AACA,MAAI,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,EAAgB,GAAhB,CAAoB,UAAA,CAAA,EAAC;AAAI,WAAA,IAAI,OAAJ,CAAY,CAAZ,CAAA;AAAc,GAAvC,CAAX;AACA,MAAI,sBAAsB,GAAG,IAAI,sBAAJ,CAA2B,KAA3B,CAA7B;AACA,MAAI,YAAJ;AACA,MAAI,UAAU,GAAc,UAAU,CAAC,EAAvC;AACA,MAAI,UAAU,GAAG,CAAC,CAAlB,CAPqC,CAQrC;;AACA,MAAM,SAAS,GAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,OAAR,EAAlB;;AACA,MAAG,SAAS,IAAI,WAAW,CAAC,QAA5B,EAAsC;AACpC,IAAA,YAAY,GAAG,IAAI,YAAJ,CAAiB,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAJ,CAAQ,KAAT,CAAzB,CAAf;AACA,IAAA,UAAU,GAAG,CAAb;AACD,GAHD,MAGO;AACL,QAAG,SAAS,IAAI,WAAW,CAAC,UAA5B,EAAwC;AACtC,MAAA,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,CAAD,CAAJ,CAAQ,KAAT,CAAvB;AACD,KAFD,MAEO,IAAG,SAAS,IAAI,WAAW,CAAC,QAA5B,EAAqC;AAC1C,UAAM,CAAC,GAAG,IAAI,IAAJ,CAAY,KAAK,CAAC,WAAN,KAAmB,GAAnB,IAAuB,KAAK,CAAC,QAAN,KAAmB,CAA1C,IAA2C,GAA3C,GAA+C,KAAK,CAAC,OAAN,EAA/C,GAA8D,GAA9D,GAAkE,IAAI,CAAC,CAAD,CAAJ,CAAQ,KAAR,CAAc,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAlE,GAA2F,GAA3F,GAA+F,IAAI,CAAC,CAAD,CAAJ,CAAQ,KAAR,CAAc,KAAd,CAAoB,CAApB,CAA3G,CAAV;AACA,MAAA,sBAAsB,GAAG,IAAI,sBAAJ,CAA2B,CAA3B,CAAzB;AACD,KAHM,MAGA;AACL,YAAM,IAAI,KAAJ,CAAU,WAAV,CAAN;AACD;;AACD,QAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,OAAR,MAAqB,WAAW,CAAC,QAApC,EAA8C;AAC5C,YAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,IAAA,YAAY,GAAG,IAAI,YAAJ,CAAiB,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAJ,CAAQ,KAAT,CAAzB,CAAf;AACA,IAAA,UAAU,GAAG,CAAb;AACD;;AACD,MAAI,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,UAAX,EAAuB,GAAvB,CAA2B,UAAA,CAAA,EAAC;AAAI,WAAA,CAAC,CAAC,KAAF;AAAO,GAAvC,EAAyC,IAAzC,CAA8C,GAA9C,CAAZ;AACA,SAAO,IAAI,WAAJ,CACL,IAAI,MAAJ,CAAW,MAAI,IAAI,CAAC,GAAL,EAAf,CADK,EAEL,IAAI,SAAJ,CAAc,KAAd,CAFK,EAGL,sBAHK,EAIL,UAJK,EAKL,YALK,CAAP;AAOD;;AAOD,SAAS,SAAT,CAAmB,IAAnB,EAA8B,WAA9B,EAAiD;AAAnB,MAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,KAAA;AAAmB;;AAC/C,MAAM,CAAC,GAAG,WAAW,GAAG,EAAH,GAAQ,SAAO,IAAI,CAAC,QAAL,CAAc,aAAd,CAA4B,sBAA5B,EAAP,GAA2D,GAA3D,GAA+D,EAAE,CAAC,MAAH,CAAU,QAAV,CAAmB,IAAI,CAAC,QAAL,CAAc,aAAd,CAA4B,KAA5B,CAAkC,MAAlC,EAAnB,CAA/D,GAA6H,QAA1J;AACA,SAAO,aACL,CADK,GACJ,UADI,GAED,IAAI,CAAC,QAAL,CAAc,UAFb,GAEuB,eAFvB,IAGD,IAAI,CAAC,QAAL,CAAc,aAAd,CAA4B,OAA5B,KAAwC,IAAI,CAAC,QAAL,CAAc,aAAd,CAA4B,WAA5B,EAAxC,GAAoF,EAHnF,IAGqF,eAHrF,GAID,IAAI,CAAC,SAAL,CAAe,KAJd,GAImB,eAJnB,GAKD,IAAI,CAAC,YAAL,CAAkB,KALjB,GAKsB,eALtB,GAMD,IAAI,CAAC,MAAL,CAAY,gBAAZ,CAA6B,GAA7B,CAAiC,UAAA,CAAA,EAAC;AAAI,WAAA,KAAK,CAAC,CAAC,KAAP;AAAY,GAAlD,EAAoD,KAApD,CAA0D,YAAA;AAAI,WAAA,EAAA;AAAE,GAAhE,CANC,GAMgE,eANhE,GAOD,IAAI,CAAC,MAAL,CAAY,gBAAZ,CAA6B,GAA7B,CAAiC,UAAA,CAAA,EAAC;AAAI,WAAA,CAAC,CAAC,aAAF,CAAgB,WAAhB,EAAA;AAA6B,GAAnE,EAAqE,KAArE,CAA2E,YAAA;AAAI,WAAA,EAAA;AAAE,GAAjF,CAPC,GAOiF,eAPjF,GAQD,IAAI,CAAC,MAAL,CAAY,gBAAZ,CAA6B,GAA7B,CAAiC,UAAA,CAAA,EAAC;AAAI,WAAA,CAAC,CAAC,iBAAF,CAAoB,GAApB,CAAwB,UAAA,CAAA,EAAC;AAAI,aAAA,CAAC,CAAC,WAAF,EAAA;AAAe,KAA5C,EAA8C,KAA9C,CAAoD,YAAA;AAAI,aAAA,EAAA;AAAE,KAA1D,CAAA;AAA2D,GAAjG,EAAmG,KAAnG,CAAyG,YAAA;AAAI,WAAA,EAAA;AAAE,GAA/G,CARC,GAQ+G,eAR/G,IASD,IAAI,CAAC,UAAL,GAAkB,UAAlB,GAA+B,EAT9B,IASgC,gBATvC;AAWD;;AACD,IAAI,KAAK,GAAG,IAAI,KAAJ,EAAZ;AACA,KAAK,CAAC,IAAN,CAAW,UAAC,CAAD,EAAE;AACX,MAAM,IAAI,GAAG,CAAC,CAAC,GAAF,CAAM,UAAA,CAAA,EAAC;AAClB,QAAI,QAAJ;AACA,QAAM,KAAK,GAAG,IAAI,sBAAJ,CAA2B,IAAI,IAAJ,CAAS,CAAC,CAAC,sBAAX,CAA3B,CAAd;;AACA,QAAG,KAAK,CAAC,KAAN,CAAY,QAAZ,MAA0B,CAA7B,EAAgC;AAC9B,MAAA,QAAQ,GAAG,IAAI,QAAJ,CAAa,KAAb,EAAoB,UAAU,CAAC,CAAC,CAAC,UAAH,CAA9B,CAAX;AACD,KAFD,MAEO;AACL,MAAA,QAAQ,GAAG,QAAQ,CAAC,kBAAT,CAA4B,KAA5B,CAAX;AACD;;AAED,QAAI,gBAAJ;;AACA,QAAG,CAAC,CAAC,aAAF,CAAgB,MAAhB,IAA0B,CAA7B,EAAgC;AAC9B,MAAA,gBAAgB,GAAG,MAAM,CAAC,KAAP,EAAnB;AACD,KAFD,MAEO;AACL,UAAI,SAAJ;;AACA,UAAG,CAAC,CAAC,WAAF,CAAc,MAAd,IAAwB,CAA3B,EAA8B;AAC5B,QAAA,SAAS,GAAG,MAAM,CAAC,KAAP,EAAZ;AACD,OAFD,MAEO;AACL,QAAA,SAAS,GAAG,MAAM,CAAC,IAAP,CAAY,IAAI,iBAAJ,CAAsB,IAAI,IAAJ,CAAS,CAAC,CAAC,WAAX,CAAtB,CAAZ,CAAZ;AACD;;AACD,UAAM,IAAI,GAAG,IAAI,UAAJ,CACX,IAAI,mBAAJ,CAAwB,IAAI,IAAJ,CAAS,CAAC,CAAC,aAAX,CAAxB,CADW,EAEX,SAFW,CAAb;AAIA,MAAA,gBAAgB,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAnB;AACD;;AAED,WAAO,IAAI,IAAJ,CACL,IAAI,MAAJ,CAAW,CAAC,CAAC,MAAb,CADK,EAEL,IAAI,SAAJ,CAAc,CAAC,CAAC,SAAhB,CAFK,EAGL,QAHK,EAIL,IAAI,YAAJ,CAAiB,CAAC,CAAC,YAAnB,CAJK,EAKL,IAAI,MAAJ,CAAW,gBAAX,CALK,EAML,CAAC,CAAC,UAAF,CAAa,MAAb,GAAsB,CANjB,CAAP;AAQD,GAlCY,EAkCV,IAlCU,CAkCL,UAAC,CAAD,EAAI,CAAJ,EAAK;AACX,WAAO,CAAC,CAAC,QAAF,CAAW,YAAX,KAA4B,CAAC,CAAC,QAAF,CAAW,YAAX,EAAnC;AACD,GApCY,CAAb;AAsCA,MAAI,QAAQ,GAAG,IAAI,IAAJ,EAAf;AACA,EAAA,QAAQ,CAAC,OAAT,CAAiB,QAAQ,CAAC,OAAT,KAAqB,CAAtC;AACA,EAAA,QAAQ,CAAC,QAAT,CAAkB,CAAlB;AACA,EAAA,QAAQ,CAAC,UAAT,CAAoB,CAApB;AACA,EAAA,QAAQ,CAAC,UAAT,CAAoB,CAApB;AACA,EAAA,QAAQ,CAAC,eAAT,CAAyB,CAAzB;AACA,MAAM,SAAS,GAAG,IAAI,CAAC,MAAL,CAAY,UAAA,CAAA,EAAC;AAAI,WAAA,CAAC,CAAC,QAAF,CAAW,aAAX,CAAyB,KAAzB,CAA+B,OAA/B,KAA2C,QAAQ,CAAC,OAAT,EAA3C;AAA6D,GAA9E,CAAlB;AACA,MAAM,YAAY,GAAG,CAAC,GAAD,EAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EAA+B,IAA/B,EAAqC,UAArC,CAArB;AACA,EAAA,QAAQ,CAAC,aAAT,CAAuB,kBAAvB,EAA2C,SAA3C,GAAuD,YAAY,CAAC,GAAb,CAAiB,UAAA,CAAA,EAAC;AAAI,WAAA,SAAO,CAAP,GAAQ,OAAR;AAAe,GAArC,EAAuC,IAAvC,CAA4C,EAA5C,CAAvD;AACA,EAAA,QAAQ,CAAC,aAAT,CAAuB,gBAAvB,EAAyC,SAAzC,GAAqD,SAAS,CAAC,GAAV,CAAc,UAAA,IAAA,EAAI;AACrE,WAAO,SAAS,CAAC,IAAD,EAAO,IAAP,CAAhB;AACD,GAFoD,EAElD,IAFkD,CAE7C,EAF6C,CAArD;AAIA,MAAM,OAAO,GAAG,CAAC,IAAD,EAAO,GAAP,EAAW,IAAX,EAAgB,KAAhB,EAAsB,IAAtB,EAA2B,IAA3B,EAAgC,IAAhC,EAAqC,IAArC,EAA2C,UAA3C,CAAhB;AACA,EAAA,QAAQ,CAAC,aAAT,CAAuB,aAAvB,EAAsC,SAAtC,GAAkD,OAAO,CAAC,GAAR,CAAY,UAAA,CAAA,EAAC;AAAI,WAAA,SAAO,CAAP,GAAQ,OAAR;AAAe,GAAhC,EAAkC,IAAlC,CAAuC,EAAvC,CAAlD;AACA,EAAA,QAAQ,CAAC,aAAT,CAAuB,WAAvB,EAAoC,SAApC,GAAgD,IAAI,CAAC,GAAL,CAAS,UAAA,IAAA,EAAI;AAC3D,WAAO,SAAS,CAAC,IAAD,CAAhB;AACD,GAF+C,EAE7C,IAF6C,CAExC,EAFwC,CAAhD;AAGA,EAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACD,CA1DD;AA4DA,QAAQ,CAAC,aAAT,CAAuB,uBAAvB,EAAgD,gBAAhD,CAAiE,OAAjE,EAA0E,YAAA;AACxE,MAAI,CAAC,GAAQ,QAAQ,CAAC,aAAT,CAAuB,kBAAvB,CAAb;AACA,MAAM,IAAI,GAAG,iBAAiB,CAAC,CAAC,CAAC,KAAH,CAA9B;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,UAAL,GAAkB,IAAlB,CAAuB,IAAvB,CAAZ;AACA,EAAA,KAAK,CAAC,GAAN,CAAU,IAAV,EAAgB,YAAA,CAAQ,CAAxB;AACD,CALD","file":"main.7da74d5d.map","sourceRoot":"..","sourcesContent":["class Vo<T> {\n  public value: T;\n  constructor(value: T) {\n      this.value = value;\n  }\n}\nexport class StringVo extends Vo<string> {\n}\n\nexport class NumberVo extends Vo<number> {\n}\n\nexport class DateVo extends Vo<Date> {\n  getDateText() {\n    return `${this.value.getFullYear()}/${this.getDateExcludeYearText()}`\n  }\n  getDateExcludeYearText() {\n    return `${DateVo.zerofill(this.value.getMonth() + 1)}/${DateVo.zerofill(this.value.getDate())}`\n  }\n  getTimeText() {\n    return `${DateVo.zerofill(this.value.getHours())}:${DateVo.zerofill(this.value.getMinutes())}`\n  }\n\n  static zerofill(v: any) {\n    return ('0' + v).slice(-2);\n  }\n  public static toJpnDay(num: number) {\n    return '日月火水木金土'[num];\n  }\n}","export interface Option<T> {\n  map<R>(cb: (v:T) => R): Option<R>\n  isEmpty(): boolean\n  isDefined(): boolean\n  get(): T\n  getOr(cb:()=>T): T\n}\n\nexport function optionOf<T>(v?:T): Option<T> {\n  if(v === null || v === undefined) {\n    return new None<T>();\n  }\n  return new Some<T>(v);\n}\n\nexport function some<T>(v:T): Option<T> {\n  return new Some(v);\n}\nexport function empty<T>(): Option<T> {\n  return new None();\n}\n\nexport class Some<T> implements Option<T> {\n  public value: T;\n  constructor(value: T) {\n    this.value = value;\n  }\n  map<R>(cb: (v:T) => R): Option<R> {\n    return optionOf(cb(this.value));\n  }\n  isEmpty(): boolean {\n    return false;\n  }\n  isDefined(): boolean {\n    return true;\n  }\n  get(): T {\n    return this.value;\n  }\n  getOr(cb:()=>T): T {\n    return this.value;\n  }\n}\n\nexport class None<T> implements Option<T> {\n  map<R>(cb: (v:T) => R): Option<R> {\n    return empty<R>()\n  }\n  isEmpty(): boolean {\n    return true;\n  }\n  isDefined(): boolean {\n    return false;\n  }\n  get(): T {\n    throw new Error(\"value is none\");\n  }\n  getOr(cb:()=>T): T {\n    return cb();\n  }\n}","import * as vo from \"./vo\";\nimport * as option from \"./option\";\n\nfunction zerofill(v: any) {\n  return ('0' + v).slice(-2);\n}\nclass Hoge extends vo.StringVo {}\n\nvar a = new Hoge(\"ge\");\nconsole.log(a);\n\nenum ExecTiming {\n  AM = 'AM',\n  PM1 = 'PM1',\n  PM2 = 'PM2',\n  OVER = 'OVER'\n}\n\nclass ScheduledStartDateTime extends vo.DateVo {\n  hasTime() {\n    return this.value.getHours() > 0 || this.value.getMinutes() > 0;\n  }\n  toGasValue(): string {\n    const d = `${this.value.getFullYear()}/${zerofill(this.value.getMonth() + 1)}/${zerofill(this.value.getDate())}`;\n    if(!this.hasTime()) {\n      return d;\n    }\n    return d + ` ${zerofill(this.value.getHours())}:${zerofill(this.value.getMinutes())}`\n\n  }\n}\n\nclass Schedule {\n  startDateTime: ScheduledStartDateTime;\n  execTiming: ExecTiming;\n  constructor(startDateTime: ScheduledStartDateTime, execTiming: ExecTiming) {\n    this.startDateTime = startDateTime;\n    this.execTiming = execTiming;\n  }\n  static createOnlyDateTime(startDateTime: ScheduledStartDateTime): Schedule {\n    const h = startDateTime.value.getHours();\n    var execTiming: ExecTiming\n    if(h < 12) {\n      execTiming = ExecTiming.AM\n    } else if(h < 15) {\n      execTiming = ExecTiming.PM1\n    } else if(h < 18) {\n      execTiming = ExecTiming.PM2\n    } else {\n      execTiming = ExecTiming.OVER\n    }\n    return new Schedule(startDateTime, execTiming);\n  }\n  public getSortValue():number {\n    var p = 0;\n    if(this.execTiming == ExecTiming.PM1) {\n      p = 1;\n    } else if(this.execTiming == ExecTiming.PM2) {\n      p = 2;\n    } if(this.execTiming == ExecTiming.OVER) {\n      p = 3;\n    }\n    return parseInt(`${this.startDateTime.getDateText().split('/').join('')}${p}`)\n  }\n}\n\nclass EstimateHour extends vo.NumberVo {}\nclass ActualHour extends vo.NumberVo {}\nclass ActualStartDateTime extends vo.DateVo {}\nclass ActualEndDateTime extends vo.DateVo {\n  calcActualHour(startDateTime: ActualStartDateTime): ActualHour {\n    return new ActualHour((this.value.getTime() - startDateTime.value.getTime()) / (60 * 60 * 1000));\n  }\n}\nclass ActualTerm {\n  startDateTime: ActualStartDateTime;\n  endDateTimeOption: option.Option<ActualEndDateTime>;\n  actualHourOption: option.Option<ActualHour>;\n  constructor(startDateTime: ActualStartDateTime, endDateTimeOption: option.Option<ActualEndDateTime>) {\n    this.startDateTime = startDateTime;\n    this.endDateTimeOption = endDateTimeOption;\n    this.actualHourOption = endDateTimeOption.map(end => end.calcActualHour(startDateTime))\n  }\n\n  updateEndDateTime(actualEndDateTime: ActualEndDateTime): ActualTerm {\n    return new ActualTerm(this.startDateTime, option.some(actualEndDateTime));\n  }\n}\n\nclass Actual {\n  actualTermOption: option.Option<ActualTerm>\n  actualHourOption: option.Option<ActualHour>\n  constructor(actualTermOption: option.Option<ActualTerm>) {\n    this.actualTermOption = actualTermOption;\n    if(actualTermOption.isEmpty()) {\n      this.actualHourOption = option.empty();\n    } else {\n      this.actualHourOption = actualTermOption.get().actualHourOption;\n    }  \n  }\n\n  getActualStartDateTimeOption(): option.Option<ActualStartDateTime> {\n    return this.actualTermOption.map(v => v.startDateTime);\n  }\n\n  getActualEndDateTimeOption(): option.Option<ActualEndDateTime> {\n    if(this.actualTermOption.isEmpty()) {\n      return option.empty();\n    }\n    return this.actualTermOption.get().endDateTimeOption;\n  }\n\n}\n\nclass TaskId extends vo.StringVo {\n  private _TaskId(){}\n}\nclass TaskTitle extends vo.StringVo {\n  private _TaskTitle(){}\n}\n\nclass Task {\n  taskId: TaskId;\n  taskTitle: TaskTitle;\n  schedule: Schedule;\n  estimateHour: EstimateHour;\n  actual: Actual;\n  isArchived: boolean;\n  constructor(\n    taskId: TaskId, \n    taskTitle: TaskTitle, \n    schedule: Schedule, \n    estimateHour: EstimateHour, \n    actual: Actual, \n    isArchived: boolean\n  ) {\n    this.taskId = taskId;\n    this.taskTitle = taskTitle;\n    this.schedule = schedule;\n    this.estimateHour = estimateHour;\n    this.actual = actual;\n    this.isArchived = isArchived;\n  }\n}\n\ndeclare class SheetData {\n  taskId: string;\n  taskTitle: string;\n  scheduledStartDateTime: string;\n  execTiming: string;\n  estimateHour: number;\n  startDateTime: string;\n  endDateTime: string;\n  isArchived: string;\n}\n\nclass TextTask {\n  id: string;\n  ti: string;\n  sch: string;\n  exe: string;\n  est: string;\n  st: string;\n  end: string;\n  archive: string;\n  static create(text:string): TextTask {\n    var obj: any = JSON.stringify(text)\n    var textTask = new TextTask()\n    textTask.id = obj.id;\n    textTask.ti = obj.ti;\n    textTask.sch = obj.sch;\n    textTask.exe = obj.exe || ''\n    textTask.est = obj.est\n    textTask.st = obj.st || ''\n    textTask.end = obj.end || ''\n    textTask.archive = obj.archive || ''\n    return textTask;\n  }\n  /*\n  var textTask = TextTask.create(text);\n    var data = new SheetData();\n    data.taskId = textTask.id\n    data.taskTitle = textTask.ti\n    data.scheduledStartDateTime = textTask.sch\n    data.execTiming = textTask.exe\n    data.estimateHour = parseInt(textTask.est)\n    data.startDateTime = textTask.st\n    data.endDateTime = textTask.end\n    data.isArchived = textTask.archive\n    */\n\n  // static mapping = [\n  //   ['id', 'taskId'],\n  //   ['ti', 'taskTitle'],\n  //   ['sch', 'scheduledStartDateTime'],\n  // ]\n}\n\nclass TaskConvertor {\n  dataToTask(v: SheetData): Task {\n    var schedule: Schedule\n    const start = new ScheduledStartDateTime(new Date(v.scheduledStartDateTime))\n    if(start.value.getHours() == 0) {\n      schedule = new Schedule(start, ExecTiming[v.execTiming])\n    } else {\n      schedule = Schedule.createOnlyDateTime(start)\n    }\n\n    var actualTermOption: option.Option<ActualTerm>;\n    if(v.startDateTime.length == 0) {\n      actualTermOption = option.empty()\n    } else {\n      var endOption: option.Option<ActualEndDateTime>\n      if(v.endDateTime.length == 0) {\n        endOption = option.empty();\n      } else {\n        endOption = option.some(new ActualEndDateTime(new Date(v.endDateTime)))\n      }\n      const term = new ActualTerm(\n        new ActualStartDateTime(new Date(v.startDateTime)),\n        endOption\n      )\n      actualTermOption = option.some(term)\n    }\n\n    return new Task(\n      new TaskId(v.taskId),\n      new TaskTitle(v.taskTitle),\n      schedule,\n      new EstimateHour(v.estimateHour),\n      new Actual(actualTermOption),\n      v.isArchived.length > 0\n    );\n  }\n\n  taskToData(v: Task): SheetData {\n    var data = {} as SheetData;\n    data.taskId = v.taskId.value;\n    data.taskTitle = v.taskTitle.value;\n    data.scheduledStartDateTime = v.schedule.startDateTime.value.toISOString();\n    data.execTiming = v.schedule.execTiming;\n    data.estimateHour = v.estimateHour.value;\n    data.startDateTime = v.actual.getActualStartDateTimeOption().map(v => v.value.toISOString()).getOr(() => '');\n    data.endDateTime = v.actual.getActualEndDateTimeOption().map(v => v.value.toISOString()).getOr(() => '');\n    data.isArchived = v.isArchived ? 'o' : '';\n    return data;\n  }\n\n  textToData(text:string): SheetData {\n    var textTask = TextTask.create(text);\n    var data = new SheetData();\n    data.taskId = textTask.id\n    data.taskTitle = textTask.ti\n    data.scheduledStartDateTime = textTask.sch\n    data.execTiming = textTask.exe\n    data.estimateHour = parseInt(textTask.est)\n    data.startDateTime = textTask.st\n    data.endDateTime = textTask.end\n    data.isArchived = textTask.archive\n    return data;\n  }\n\n  dataToText(data:SheetData): string {\n\n  }\n}\n\n/**\n * 送信前のタスク\n */\nclass PendingTask {\n  taskId: TaskId;\n  taskTitle: TaskTitle;\n  scheduledStartDateTime: ScheduledStartDateTime;\n  execTiming:ExecTiming;\n  estimateHour: EstimateHour;\n\n  constructor(\n    taskId: TaskId, taskTitle: TaskTitle, scheduledStartDateTime: ScheduledStartDateTime, execTiming:ExecTiming, estimateHour: EstimateHour\n  ) {\n    this.taskId = taskId;\n    this.taskTitle = taskTitle;\n    this.scheduledStartDateTime = scheduledStartDateTime;\n    this.execTiming = execTiming;\n    this.estimateHour = estimateHour;\n  }\n\n  toGasValue(): string[] {\n    return [this.taskId.value, this.scheduledStartDateTime.toGasValue(), this.execTiming, this.taskTitle.value, '' + this.estimateHour.value]\n\n  }\n\n}\n\nfunction getToday(): Date {\n  const d = new Date();\n  d.setHours(0);\n  d.setMinutes(0);\n  d.setSeconds(0);\n  d.setMilliseconds(0);\n  return d;\n}\n\nclass TextArg extends vo.StringVo {\n  getType(): TextArgType {\n    if(parseInt(this.value) == NaN) {\n      if(this.value == ExecTiming.AM \n        || this.value == ExecTiming.PM1\n        || this.value == ExecTiming.PM2\n        || this.value == ExecTiming.OVER) {\n          return TextArgType.execTiming;\n        } else {\n          return TextArgType.text\n        }\n\n    } else {\n      if(this.value.indexOf('.') == -1 && this.value.length == 4) {\n        return TextArgType.schedule;\n      } else {\n        return TextArgType.estimate;\n      }\n\n    }\n  }\n  \n}\nenum TextArgType {\n    schedule, execTiming, estimate, text\n}\n\n//execTiming: ExecTiming\nfunction createPendingTask(text: String):PendingTask  {\n  const today = getToday();\n  text = text.trim();\n  var args = text.split(' ').map(v => new TextArg(v));\n  var scheduledStartDateTime = new ScheduledStartDateTime(today);\n  var estimateHour: EstimateHour;\n  var execTiming:ExecTiming = ExecTiming.AM;\n  var startIndex = -1;\n  // 1要素目が見積もり\n  const firstType = args[0].getType();\n  if(firstType == TextArgType.estimate) {\n    estimateHour = new EstimateHour(parseInt(args[0].value));\n    startIndex = 1;\n  } else {\n    if(firstType == TextArgType.execTiming) {\n      execTiming = ExecTiming[args[0].value];\n    } else if(firstType == TextArgType.schedule){\n      const d = new Date(`${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()} ${args[0].value.slice(0, 2)}:${args[0].value.slice(2)}`)\n      scheduledStartDateTime = new ScheduledStartDateTime(d);\n    } else {\n      throw new Error(\"フォーマットエラー\");\n    }\n    if(args[1].getType() != TextArgType.estimate) {\n      throw new Error(\"フォーマットエラー: 2要素目は見積もりにするべき\");\n    }\n    estimateHour = new EstimateHour(parseInt(args[1].value));\n    startIndex = 2;\n  }\n  var title = args.slice(startIndex).map(v => v.value).join(' ');\n  return new PendingTask(\n    new TaskId(`T${Date.now()}`),\n    new TaskTitle(title),\n    scheduledStartDateTime,\n    execTiming,\n    estimateHour\n  );\n}\n\ndeclare class Sheet {\n  list(callback:(list:SheetData[])=>void);\n  add(task:PendingTask, callback:(list:SheetData[])=>void);\n}\n\nfunction taskToRow(task:Task, excludeDate = false): string {\n  const d = excludeDate ? '' : `<td>${task.schedule.startDateTime.getDateExcludeYearText()}(${vo.DateVo.toJpnDay(task.schedule.startDateTime.value.getDay())})</td>`\n  return `<tr>\n  ${d}\n  <td>${task.schedule.execTiming}</td>\n  <td>${task.schedule.startDateTime.hasTime() ? task.schedule.startDateTime.getTimeText() : ''}</td>\n  <td>${task.taskTitle.value}</td>\n  <td>${task.estimateHour.value}</td>\n  <td>${task.actual.actualHourOption.map(v => '' + v.value).getOr(()=>'')}</td>\n  <td>${task.actual.actualTermOption.map(v => v.startDateTime.getTimeText()).getOr(()=>'')}</td>\n  <td>${task.actual.actualTermOption.map(v => v.endDateTimeOption.map(w => w.getTimeText()).getOr(()=>'')).getOr(()=>'')}</td>\n  <td>${task.isArchived ? 'archived' : ''}</td>\n  </tr>`\n}\nvar sheet = new Sheet();\nsheet.list((l) => {\n  const list = l.map(v => {\n    var schedule: Schedule\n    const start = new ScheduledStartDateTime(new Date(v.scheduledStartDateTime))\n    if(start.value.getHours() == 0) {\n      schedule = new Schedule(start, ExecTiming[v.execTiming])\n    } else {\n      schedule = Schedule.createOnlyDateTime(start)\n    }\n\n    var actualTermOption: option.Option<ActualTerm>;\n    if(v.startDateTime.length == 0) {\n      actualTermOption = option.empty()\n    } else {\n      var endOption: option.Option<ActualEndDateTime>\n      if(v.endDateTime.length == 0) {\n        endOption = option.empty();\n      } else {\n        endOption = option.some(new ActualEndDateTime(new Date(v.endDateTime)))\n      }\n      const term = new ActualTerm(\n        new ActualStartDateTime(new Date(v.startDateTime)),\n        endOption\n      )\n      actualTermOption = option.some(term)\n    }\n\n    return new Task(\n      new TaskId(v.taskId),\n      new TaskTitle(v.taskTitle),\n      schedule,\n      new EstimateHour(v.estimateHour),\n      new Actual(actualTermOption),\n      v.isArchived.length > 0\n    );\n  }).sort((a, b) => {\n    return a.schedule.getSortValue() - b.schedule.getSortValue();\n  })\n\n  var tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  tomorrow.setHours(0);\n  tomorrow.setMinutes(0);\n  tomorrow.setSeconds(0);\n  tomorrow.setMilliseconds(0);\n  const todayList = list.filter(v => v.schedule.startDateTime.value.getTime() < tomorrow.getTime())\n  const todayColumns = ['節','予定','タスク','見積','実績','開始','終了', 'archived']\n  document.querySelector('#todayTaskHeader').innerHTML = todayColumns.map(v => `<th>${v}</th>`).join('');\n  document.querySelector('#todayTaskBody').innerHTML = todayList.map(task => {\n    return taskToRow(task, true);\n  }).join('')\n\n  const columns = ['日付', '節','予定','タスク','見積','実績','開始','終了', 'archived']\n  document.querySelector('#taskHeader').innerHTML = columns.map(v => `<th>${v}</th>`).join('');\n  document.querySelector('#taskBody').innerHTML = list.map(task => {\n    return taskToRow(task);\n  }).join('')\n  console.log(list);\n})\n\ndocument.querySelector('#sendTodaysTaskButton').addEventListener('click', () => {\n  var v: any = document.querySelector('#todaysTaskInput');\n  const task = createPendingTask(v.value);\n  console.log(task.toGasValue().join('\\t'));\n  sheet.add(task, () => {});\n})"]}